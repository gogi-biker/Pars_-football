from structure import Structure
from types import MappingProxyType


class TeamIndicators(Structure):
    """
    :param name: Team name
    :param round: Which time
    :param ball_possession: ...
    :param total_shots: ...
    :param shots_on_target: ...
    :param shots_off_target: ...
    :param blocked_shots: ...
    :param corner_kicks: ...
    :param offsides: ...
    :param yellow_cards: ...
    :param big_chances: ...
    :param big_chances_missed: ...
    :param hit_woodwork: ...
    :param shots_inside_box: ...
    :param shots_outside_box: ...
    :param goalkeeper_saves: ...
    :param passes: ...
    :param accurate_passes: ...
    :param long_balls: ...
    :param crosses: ...
    :param possession_lost: ...
    :param duels_won: ...
    :param aerials_won: ...
    :param tackles: ...
    :param interceptions: ...
    :param clearances: ...
    """
    _fields = MappingProxyType({"name": str, "round": str, "ball_possession": int, "total_shots": int,
                                "shots_on_target": int, "shots_off_target": int, "blocked_shots": int,
                                "corner_kicks": int, "offsides": int, "fouls": int, "yellow_cards": int,
                                "big_chances": int, "big_chances_missed": int, "hit_woodwork": int,
                                "shots_inside_box": int, "shots_outside_box": int, "goalkeeper_saves": int,
                                "passes": int, "accurate_passes": int, "long_balls": int, "crosses": int,
                                "possession_lost": int, "duels_won": int, "aerials_won": int, "tackles": int,
                                "interceptions": int, "clearances": int})


class GameIndicators(Structure):
    """
    :param match: Match name # year_team1_result_team2 (2014_MyTeam_10_YourTeam)
    :param chances_draw: Actual draw chance
    :param team1: All data from Team 1
    :param team2: All data from Team 2
    """
    _fields = MappingProxyType({"match": str, "chances_draw": int, "team1": dict, "team2": dict})
    _collection = MappingProxyType({"name": "gameIndicators", "key": "match"})

    # def dict(self):
    #     self.team1 = self.team1 or TeamIndicators().dict()
    #     self.team2 = self.team2 or TeamIndicators().dict()
    #     return super().dict()
